<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:SteamTools.UI.Converters"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <Brush x:Key="ScrollBarContainerPassiveBackgroundBrush">#26292e</Brush>
    <Brush x:Key="ScrollBarThumbBrush">#2d9cfc</Brush>

    <Color x:Key="ScrollBarContainerPassiveBackgroundColor">#26292e</Color>
    <Color x:Key="ScrollBarContainerActiveBackgroundColor">#32373E</Color>

    <system:Double x:Key="ScrollBarPassiveOpacity">0.5</system:Double>
    <system:Double x:Key="ScrollBarSize">8</system:Double>

    <CornerRadius x:Key="ScrollBarThumbCornerRadius">5</CornerRadius>
    <CornerRadius x:Key="ScrollBarContainerCornerRadius">5</CornerRadius>

    <Duration x:Key="ScrollBarIsMouseOverEnterAnimationDuration">0:0:0.25</Duration>
    <Duration x:Key="ScrollBarIsMouseOverExitAnimationDuration">0:0:0.25</Duration>
    <Duration x:Key="ScrollBarContainerMouseEnterAnimationDuration">0:0:0.25</Duration>
    <Duration x:Key="ScrollBarContainerMouseLeaveAnimationDuration">0:0:0.25</Duration>

    <converters:ThumbHalfSizeConverter x:Key="ThumbHalfSizeConverter" />
    <converters:HeightToMarginConverter x:Key="HeightToMarginConverter" />

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource ScrollBarThumbBrush}"
                            CornerRadius="{StaticResource ScrollBarThumbCornerRadius}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}" x:Key="ScrollBar">
        <Setter Property="Width" Value="{StaticResource ScrollBarSize}" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="MinWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Opacity" Value="{StaticResource ScrollBarPassiveOpacity}" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Name="Bg" SnapsToDevicePixels="True">
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="True"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               Width="{StaticResource ScrollBarSize}"
                               ViewportSize="NaN"
                               HorizontalAlignment="Center">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
                                    MinHeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ActualHeight, Converter={StaticResource ThumbHalfSizeConverter}}"
                                    Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>

                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
                <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg" SnapsToDevicePixels="True">
                                <Track x:Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       ViewportSize="NaN"
                                       Height="{StaticResource ScrollBarSize}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageLeftCommand}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageRightCommand}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb
                                            MinWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ActualWidth, Converter={StaticResource ThumbHalfSizeConverter}}"
                                            Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="{StaticResource ScrollBarIsMouseOverExitAnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="{StaticResource ScrollBarPassiveOpacity}"
                                Duration="{StaticResource ScrollBarIsMouseOverEnterAnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="ScrollBarContainer">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="CornerRadius" Value="{StaticResource ScrollBarContainerCornerRadius}" />
        <Setter Property="Background" Value="{StaticResource ScrollBarContainerPassiveBackgroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                            To="{StaticResource ScrollBarContainerActiveBackgroundColor}"
                            Duration="{StaticResource ScrollBarContainerMouseEnterAnimationDuration}" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                            To="{StaticResource ScrollBarContainerPassiveBackgroundColor}"
                            Duration="{StaticResource ScrollBarContainerMouseLeaveAnimationDuration}" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" x:Key="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Grid.Column="0"
                                                Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <Border x:Name="VerticalBorder" Grid.Column="1"
                                Margin="{Binding ElementName=Corner, Path=ActualHeight, Converter={StaticResource HeightToMarginConverter}, ConverterParameter=TopBottom}"
                                Grid.Row="0" Style="{StaticResource ScrollBarContainer}" Visibility="Hidden">
                            <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource ScrollBar}"
                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       Value="{TemplateBinding VerticalOffset}"
                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                        </Border>
                        <Border x:Name="HorizontalBorder" Grid.Row="1"
                                Margin="{Binding ElementName=Corner, Path=ActualWidth, Converter={StaticResource HeightToMarginConverter}, ConverterParameter=LeftRight}"
                                Grid.Column="0" Style="{StaticResource ScrollBarContainer}" Visibility="Hidden">
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource ScrollBar}"
                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!-- <DoubleAnimation Storyboard.TargetName="VerticalBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" /> -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- <DoubleAnimation Storyboard.TargetName="VerticalBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" /> -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!-- TODO Пофиксить резкое сдёргивание Thumb вправо во время Trigger.ExitActions из за изменения его положения -->
                        <Trigger Property="ComputedHorizontalScrollBarVisibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!-- <DoubleAnimation Storyboard.TargetName="HorizontalBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" /> -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- <DoubleAnimation Storyboard.TargetName="HorizontalBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" /> -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>